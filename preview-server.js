// Generated by Copilot
import { createServer } from 'http';
import { readFileSync, existsSync, watchFile } from 'fs';
import { extname } from 'path';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const port = 3000;
const previewFile = join(__dirname, 'preview.html');

const mimeTypes = {
  '.html': 'text/html',
  '.js': 'application/javascript',
  '.css': 'text/css',
  '.json': 'application/json'
};

const server = createServer((req, res) => {
  let filePath = join(__dirname, req.url === '/' ? 'preview.html' : req.url);
  
  // Handle extensionless JS imports by adding .js extension
  if (!existsSync(filePath) && !extname(req.url)) {
    const jsFilePath = filePath + '.js';
    if (existsSync(jsFilePath)) {
      filePath = jsFilePath;
    }
  }
  
  if (!existsSync(filePath)) {
    res.writeHead(404);
    res.end('File not found');
    return;
  }

  const ext = extname(filePath);
  const contentType = mimeTypes[ext] || 'text/plain';

  try {
    const content = readFileSync(filePath, 'utf8');
    res.writeHead(200, { 
      'Content-Type': contentType,
      'Cache-Control': 'no-cache'
    });
    res.end(content);
  } catch (error) {
    res.writeHead(500);
    res.end('Server error');
  }
});

server.listen(port, () => {
  console.log(`Preview server running at http://localhost:${port}`);
  console.log('Press Ctrl+C to stop');
});

// Watch for changes to preview.html
if (existsSync(previewFile)) {
  watchFile(previewFile, () => {
    console.log('preview.html changed - refresh your browser');
  });
}
